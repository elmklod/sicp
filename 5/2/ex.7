; Iter

(define iter-expt-machine
 (make-machine
  '(b n product)
  (list (list '= =) (list '- -) (list '* *))
  '(expt-begin
    (assign product (const 1))
    expt-loop
    (test (op =) (reg n) (const 0))
    (branch (label expt-done))
    (assign product (op *) (reg b) (reg product))
    (assign n (op -) (reg n) (const 1))
    (goto (label expt-loop))
    expt-done)))

(set-register-contents! iter-expt-machine
                        'b
                        2)

(set-register-contents! iter-expt-machine
                        'n
                        10)

(set-register-contents! iter-expt-machine
                        'b
                        2)

(set-register-contents! iter-expt-machine
                        'n
                        0)

(set-register-contents! iter-expt-machine
                        'b
                        2)

(set-register-contents! iter-expt-machine
                        'n
                        1)

(set-register-contents! iter-expt-machine
                        'b
                        -2)

(set-register-contents! iter-expt-machine
                        'n
                        11)

(start iter-expt-machine)

(get-register-contents iter-expt-machine
                        'product)

; Rec

(define rec-expt-machine
 (make-machine
  '(b n val continue)
  (list (list '* *) (list '- -) (list '= =))
  '(expt-begin
    (assign continue (label expt-done))
    expt-loop
    (test (op =) (reg n) (const 0))
    (branch (label val-1))
    (save continue)
    (assign continue (label after-expt))
    (assign n (op -) (reg n) (const 1))
    (goto (label expt-loop))
    after-expt
    (restore continue)
    (assign val (op *) (reg b) (reg val))
    (goto (reg continue))
    val-1
    (assign val (const 1))
    (goto (reg continue))
    expt-done)))

(set-register-contents! rec-expt-machine
                        'b
                        2)

(set-register-contents! rec-expt-machine
                        'n
                        10)

(set-register-contents! rec-expt-machine
                        'b
                        2)

(set-register-contents! rec-expt-machine
                        'n
                        0)

(set-register-contents! rec-expt-machine
                        'b
                        2)

(set-register-contents! rec-expt-machine
                        'n
                        1)

(set-register-contents! rec-expt-machine
                        'b
                        -2)

(set-register-contents! rec-expt-machine
                        'n
                        11)

(start rec-expt-machine)

(get-register-contents rec-expt-machine
                       'val)
