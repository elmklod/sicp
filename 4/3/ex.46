This problem reflects the overall difficulties in dealing with assignments:
The program is imperative in nature and its result heavily depends on the order in which expressions are evaluated.
Because operands can be expressions, the problem resurfaces.

Suppose amb evaluator evaluates operands from right to left.

(parse '(the cat sleeps))

this sentence will not even be identified as one because
inside procedure parse-sentence body
(list 'sentence
         (parse-noun-phrase)
         (parse-verb-phrase))


will have (parse-verb-phrase) evaluated first.

but the first word is not in the verbs list, it is an article.
The computation will fail without any amb expression being evaluated in the first place.
procedure application (parse '(the cat sleeps)) will fail with no results, although amb evaluator evaluating operands from left-to-right
will produce the desired result:
(sentence (simple-noun-phrase (article the) (noun cat)) (verb sleeps))

Check:
;switched elements to simulate right-to-left evaluation of operands
(define (parse-sentence)
  (list 'sentence
         (parse-verb-phrase)
         (parse-noun-phrase)))


;;; Starting a new problem
;;; There are no more values of
(parse (quote (the cat sleeps)))
