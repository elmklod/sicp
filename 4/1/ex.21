((lambda (n)
   ((lambda (fib) (fib fib n))
    (lambda (fb k)
      (if (< k 2)
          k
          (+ (fb fb (- k 1)) (fb fb (- k 2)))))))
 10)

or

((lambda (n)
   ((lambda (fib) (fib fib n))
    (lambda (fb k)
      (cond ((= k 0) 0)
            ((= k 1) 1)
            ((> k 1)
             (+ (fb fb (- k 1))
                (fb fb (- k 2))))))))
 10)

or

((lambda (n)
   ((lambda (fib) (fib fib 0 1 n))
    (lambda (fb a b k)
      (if (= k 0)
          a
          (fb fb b (+ a b) (- k 1))))))
 10)
--------------------------
(define (f x)
  ((lambda (even? odd?)
     (even? even? odd? x))
   (lambda (ev? od? n)
     (if (= n 0)
         true
         (od? ev? od? (- n 1))))
   (lambda (ev? od? n)
     (if (= n 0)
         false
         (ev? ev? od? (- n 1))))))
