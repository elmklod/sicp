(define (equal? a b)
 (define (list? x)
  (or (null? x) (and (pair? x) (list? (cdr x)))))
 (let ((empty1? (null? a))
       (empty2? (null? b)))
   (cond ((and empty1? empty2?) true)
         (empty1? false)
         (empty2? false)
         ((and (list? a)
               (list? b))
          (and (equal? (car a) (car b))
               (equal? (cdr a) (cdr b))))
         (else (eq? a b)))))
