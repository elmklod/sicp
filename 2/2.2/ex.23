(define (for-each proc items)
 (cond  ((null? items) true)
        (else (proc (car items)) (for-each proc (cdr items)))))

(define (for-each proc items)
 (cond  ((null? items) true)
        ((not (null? (cdr items))) (proc (car items)) (for-each proc (cdr items)))
        (else (proc (car items)) true)))


(define (for-each proc items)
 (cond  ((null? items) (error "Applying procedure to elements of an empty list"))
        ((null? (cdr items)) (proc (car items)) true)
        (else (proc (car items)) (for-each proc (cdr items)))))

(define (for-each proc items)
 (cond  ((null? items) (error "Applying procedure to elements of an empty list"))
        (else (proc (car items)) (if (null? (cdr items))
                                     true
                                     (for-each proc (cdr items))))))
