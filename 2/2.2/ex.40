(define (unique-pairs n)
 (flatmap (lambda (i) (map (lambda (x) (list i x))
                           (enumerate-interval 1 (- i 1))))
          (enumerate-interval 1 n)))

(define (flatmap proc seq)
  (accumulate append nil (map proc seq)))

(define (prime-sum-pairs n)
  (map make-pair-sum
       (filter
        prime-sum?
        (unique-pairs n))))
